name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Sync with Capacitor
        run: npx cap sync android

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build debug APK
        run: cd android && ./gradlew assembleDebug --stacktrace

      - name: Build release APK
        run: cd android && ./gradlew assembleRelease --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30

      - name: Get commit info
        id: commit_info
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_msg=$(git log -1 --pretty=%B | head -n 1)" >> $GITHUB_OUTPUT

      - name: Create artifact summary
        run: |
          echo "## Build Successful âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ steps.commit_info.outputs.sha_short }}" >> $GITHUB_STEP_SUMMARY
          echo "**Message:** ${{ steps.commit_info.outputs.commit_msg }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### APK Files Generated" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“± **Debug APK:** app-debug.apk" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“¦ **Release APK (unsigned):** app-release-unsigned.apk" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download artifacts from the Actions tab above." >> $GITHUB_STEP_SUMMARY

      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Generate release tag with timestamp and commit SHA
          TAG_NAME="build-$(date +'%Y%m%d-%H%M%S')-${{ steps.commit_info.outputs.sha_short }}"

          # Create release notes
          cat > release_notes.md << 'EOF'
          ## ðŸ“± FlixCapacitor APK Build

          **Commit:** ${{ steps.commit_info.outputs.sha_short }}
          **Message:** ${{ steps.commit_info.outputs.commit_msg }}
          **Built:** $(date +'%Y-%m-%d %H:%M:%S UTC')

          ### Downloads
          - **app-debug.apk** - Debug build for testing
          - **app-release-unsigned.apk** - Release build (unsigned)

          ### Installation
          ```bash
          # Download and install debug APK
          adb install -r app-debug.apk
          ```

          ---
          ðŸ¤– Auto-generated by GitHub Actions
          EOF

          # Create release and upload APKs
          gh release create "$TAG_NAME" \
            --title "Build ${{ steps.commit_info.outputs.sha_short }}" \
            --notes-file release_notes.md \
            android/app/build/outputs/apk/debug/app-debug.apk \
            android/app/build/outputs/apk/release/app-release-unsigned.apk
